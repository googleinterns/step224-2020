// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Evan Spendlove, GitHub: @evanSpendlove.
//
//  This proto defines the probe interface for Hermes probes.
//  It is used in a variety of other files as it is the top-level probe interface.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.11.4
// source: github.com/googleinterns/step224-2020/config/proto/probe.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	proto1 "github.com/google/cloudprober/metrics/proto"
	proto2 "github.com/google/cloudprober/probes/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// TargetSystem is expected to be a storage system.
// It will stay constant until support for new storage systems is added.
type HermesProbeDef_TargetSystem int32

const (
	HermesProbeDef_TARGET_SYSTEM_UNSPECIFIED HermesProbeDef_TargetSystem = 0
	HermesProbeDef_GCS                       HermesProbeDef_TargetSystem = 1
	HermesProbeDef_CEPH                      HermesProbeDef_TargetSystem = 2
)

// Enum value maps for HermesProbeDef_TargetSystem.
var (
	HermesProbeDef_TargetSystem_name = map[int32]string{
		0: "TARGET_SYSTEM_UNSPECIFIED",
		1: "GCS",
		2: "CEPH",
	}
	HermesProbeDef_TargetSystem_value = map[string]int32{
		"TARGET_SYSTEM_UNSPECIFIED": 0,
		"GCS":                       1,
		"CEPH":                      2,
	}
)

func (x HermesProbeDef_TargetSystem) Enum() *HermesProbeDef_TargetSystem {
	p := new(HermesProbeDef_TargetSystem)
	*p = x
	return p
}

func (x HermesProbeDef_TargetSystem) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HermesProbeDef_TargetSystem) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_googleinterns_step224_2020_config_proto_probe_proto_enumTypes[0].Descriptor()
}

func (HermesProbeDef_TargetSystem) Type() protoreflect.EnumType {
	return &file_github_com_googleinterns_step224_2020_config_proto_probe_proto_enumTypes[0]
}

func (x HermesProbeDef_TargetSystem) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HermesProbeDef_TargetSystem.Descriptor instead.
func (HermesProbeDef_TargetSystem) EnumDescriptor() ([]byte, []int) {
	return file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescGZIP(), []int{0, 0}
}

// Probe types currently supported
type HermesProbeDef_ProbeType int32

const (
	HermesProbeDef_PROBE_TYPE_UNSPECIFIED HermesProbeDef_ProbeType = 0 // For unspecified probe types
	HermesProbeDef_GET                    HermesProbeDef_ProbeType = 1 // GET probe is for getting an object (file) from a storage system.
	HermesProbeDef_PUT                    HermesProbeDef_ProbeType = 2 // PUT probe is for putting an object (file) into a storage system.
	HermesProbeDef_DELETE                 HermesProbeDef_ProbeType = 3 // DELETE probe is for deleting an object (file) from a storage system.
)

// Enum value maps for HermesProbeDef_ProbeType.
var (
	HermesProbeDef_ProbeType_name = map[int32]string{
		0: "PROBE_TYPE_UNSPECIFIED",
		1: "GET",
		2: "PUT",
		3: "DELETE",
	}
	HermesProbeDef_ProbeType_value = map[string]int32{
		"PROBE_TYPE_UNSPECIFIED": 0,
		"GET":                    1,
		"PUT":                    2,
		"DELETE":                 3,
	}
)

func (x HermesProbeDef_ProbeType) Enum() *HermesProbeDef_ProbeType {
	p := new(HermesProbeDef_ProbeType)
	*p = x
	return p
}

func (x HermesProbeDef_ProbeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HermesProbeDef_ProbeType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_googleinterns_step224_2020_config_proto_probe_proto_enumTypes[1].Descriptor()
}

func (HermesProbeDef_ProbeType) Type() protoreflect.EnumType {
	return &file_github_com_googleinterns_step224_2020_config_proto_probe_proto_enumTypes[1]
}

func (x HermesProbeDef_ProbeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HermesProbeDef_ProbeType.Descriptor instead.
func (HermesProbeDef_ProbeType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescGZIP(), []int{0, 1}
}

type HermesProbeDef_LatencyUnit int32

const (
	HermesProbeDef_LATENCY_UNIT_UNSPECIFIED HermesProbeDef_LatencyUnit = 0
	HermesProbeDef_NANOSECOND               HermesProbeDef_LatencyUnit = 1
	HermesProbeDef_MICROSECOND              HermesProbeDef_LatencyUnit = 2
	HermesProbeDef_MILLISECOND              HermesProbeDef_LatencyUnit = 3
	HermesProbeDef_SECOND                   HermesProbeDef_LatencyUnit = 4
	HermesProbeDef_MINUTE                   HermesProbeDef_LatencyUnit = 5
	HermesProbeDef_HOUR                     HermesProbeDef_LatencyUnit = 6
)

// Enum value maps for HermesProbeDef_LatencyUnit.
var (
	HermesProbeDef_LatencyUnit_name = map[int32]string{
		0: "LATENCY_UNIT_UNSPECIFIED",
		1: "NANOSECOND",
		2: "MICROSECOND",
		3: "MILLISECOND",
		4: "SECOND",
		5: "MINUTE",
		6: "HOUR",
	}
	HermesProbeDef_LatencyUnit_value = map[string]int32{
		"LATENCY_UNIT_UNSPECIFIED": 0,
		"NANOSECOND":               1,
		"MICROSECOND":              2,
		"MILLISECOND":              3,
		"SECOND":                   4,
		"MINUTE":                   5,
		"HOUR":                     6,
	}
)

func (x HermesProbeDef_LatencyUnit) Enum() *HermesProbeDef_LatencyUnit {
	p := new(HermesProbeDef_LatencyUnit)
	*p = x
	return p
}

func (x HermesProbeDef_LatencyUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HermesProbeDef_LatencyUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_googleinterns_step224_2020_config_proto_probe_proto_enumTypes[2].Descriptor()
}

func (HermesProbeDef_LatencyUnit) Type() protoreflect.EnumType {
	return &file_github_com_googleinterns_step224_2020_config_proto_probe_proto_enumTypes[2]
}

func (x HermesProbeDef_LatencyUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HermesProbeDef_LatencyUnit.Descriptor instead.
func (HermesProbeDef_LatencyUnit) EnumDescriptor() ([]byte, []int) {
	return file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescGZIP(), []int{0, 2}
}

// HermesProbeDef defines the top-level probe interface for Hermes probes.
// All Hermes probes should extend this probe config.
type HermesProbeDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProbeName    string                      `protobuf:"bytes,1,opt,name=probe_name,json=probeName,proto3" json:"probe_name,omitempty"`
	Targets      []*Target                   `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	TargetSystem HermesProbeDef_TargetSystem `protobuf:"varint,3,opt,name=target_system,json=targetSystem,proto3,enum=hermes.HermesProbeDef_TargetSystem" json:"target_system,omitempty"`
	ProbeType    HermesProbeDef_ProbeType    `protobuf:"varint,4,opt,name=probe_type,json=probeType,proto3,enum=hermes.HermesProbeDef_ProbeType" json:"probe_type,omitempty"`
	IntervalSec  int32                       `protobuf:"varint,5,opt,name=interval_sec,json=intervalSec,proto3" json:"interval_sec,omitempty"` // Probing interval in seconds, default = 3600
	// Probes will not retry, they will fail if they timeout.
	TimeoutSec int32 `protobuf:"varint,6,opt,name=timeout_sec,json=timeoutSec,proto3" json:"timeout_sec,omitempty"` // Timeout in seconds, default = 60
	// If specified, latency is stored as a distribution
	// Measures the latency of Hermes' probes, allowing you to diagnose a network issue or issue with Hermes.
	ProbeLatencyDistribution *proto1.Dist `protobuf:"bytes,7,opt,name=probe_latency_distribution,json=probeLatencyDistribution,proto3" json:"probe_latency_distribution,omitempty"`
	// Measures the latency of the API calls for the relevant storage system targeted.
	ApiCallLatencyDistribution *proto1.Dist               `protobuf:"bytes,8,opt,name=api_call_latency_distribution,json=apiCallLatencyDistribution,proto3" json:"api_call_latency_distribution,omitempty"`
	LatencyUnit                HermesProbeDef_LatencyUnit `protobuf:"varint,9,opt,name=latency_unit,json=latencyUnit,proto3,enum=hermes.HermesProbeDef_LatencyUnit" json:"latency_unit,omitempty"` // default is MICROSECOND
	// Additional labels for the probe latency and API call latency distribution metrics.
	// Add as key-value pairs
	ProbeLatencyAdditionalLabel   []*proto2.AdditionalLabel `protobuf:"bytes,10,rep,name=probe_latency_additional_label,json=probeLatencyAdditionalLabel,proto3" json:"probe_latency_additional_label,omitempty"`
	ApiCallLatencyAdditionalLabel []*proto2.AdditionalLabel `protobuf:"bytes,11,rep,name=api_call_latency_additional_label,json=apiCallLatencyAdditionalLabel,proto3" json:"api_call_latency_additional_label,omitempty"`
}

func (x *HermesProbeDef) Reset() {
	*x = HermesProbeDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_googleinterns_step224_2020_config_proto_probe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HermesProbeDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HermesProbeDef) ProtoMessage() {}

func (x *HermesProbeDef) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_googleinterns_step224_2020_config_proto_probe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HermesProbeDef.ProtoReflect.Descriptor instead.
func (*HermesProbeDef) Descriptor() ([]byte, []int) {
	return file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescGZIP(), []int{0}
}

func (x *HermesProbeDef) GetProbeName() string {
	if x != nil {
		return x.ProbeName
	}
	return ""
}

func (x *HermesProbeDef) GetTargets() []*Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *HermesProbeDef) GetTargetSystem() HermesProbeDef_TargetSystem {
	if x != nil {
		return x.TargetSystem
	}
	return HermesProbeDef_TARGET_SYSTEM_UNSPECIFIED
}

func (x *HermesProbeDef) GetProbeType() HermesProbeDef_ProbeType {
	if x != nil {
		return x.ProbeType
	}
	return HermesProbeDef_PROBE_TYPE_UNSPECIFIED
}

func (x *HermesProbeDef) GetIntervalSec() int32 {
	if x != nil {
		return x.IntervalSec
	}
	return 0
}

func (x *HermesProbeDef) GetTimeoutSec() int32 {
	if x != nil {
		return x.TimeoutSec
	}
	return 0
}

func (x *HermesProbeDef) GetProbeLatencyDistribution() *proto1.Dist {
	if x != nil {
		return x.ProbeLatencyDistribution
	}
	return nil
}

func (x *HermesProbeDef) GetApiCallLatencyDistribution() *proto1.Dist {
	if x != nil {
		return x.ApiCallLatencyDistribution
	}
	return nil
}

func (x *HermesProbeDef) GetLatencyUnit() HermesProbeDef_LatencyUnit {
	if x != nil {
		return x.LatencyUnit
	}
	return HermesProbeDef_LATENCY_UNIT_UNSPECIFIED
}

func (x *HermesProbeDef) GetProbeLatencyAdditionalLabel() []*proto2.AdditionalLabel {
	if x != nil {
		return x.ProbeLatencyAdditionalLabel
	}
	return nil
}

func (x *HermesProbeDef) GetApiCallLatencyAdditionalLabel() []*proto2.AdditionalLabel {
	if x != nil {
		return x.ApiCallLatencyAdditionalLabel
	}
	return nil
}

var File_github_com_googleinterns_step224_2020_config_proto_probe_proto protoreflect.FileDescriptor

var file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x32,
	0x32, 0x34, 0x2d, 0x32, 0x30, 0x32, 0x30, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x1a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x72,
	0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64,
	0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x32, 0x32, 0x34, 0x2d, 0x32, 0x30, 0x32, 0x30,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x08, 0x0a, 0x0e,
	0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x44, 0x65, 0x66, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x44, 0x65, 0x66, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x48,
	0x65, 0x72, 0x6d, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x44, 0x65, 0x66, 0x2e, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73,
	0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x53, 0x65, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x5f, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x12, 0x57, 0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f,
	0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2e, 0x44, 0x69, 0x73, 0x74, 0x52, 0x18, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x4c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5c, 0x0a, 0x1d, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x70, 0x72,
	0x6f, 0x62, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x69, 0x73,
	0x74, 0x52, 0x1a, 0x61, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a,
	0x0c, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x68, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x72,
	0x6d, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x44, 0x65, 0x66, 0x2e, 0x4c, 0x61, 0x74, 0x65,
	0x6e, 0x63, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x68, 0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x1b, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x6d,
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x1d,
	0x61, 0x70, 0x69, 0x43, 0x61, 0x6c, 0x6c, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x40, 0x0a,
	0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a,
	0x19, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x47, 0x43, 0x53, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x45, 0x50, 0x48, 0x10, 0x02, 0x22,
	0x45, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x50, 0x52, 0x4f, 0x42, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x22, 0x7f, 0x0a, 0x0b, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x4c, 0x41, 0x54, 0x45, 0x4e, 0x43, 0x59,
	0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x41, 0x4e, 0x4f, 0x53, 0x45, 0x43, 0x4f, 0x4e,
	0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x53, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x49, 0x4c, 0x4c, 0x49, 0x53, 0x45, 0x43,
	0x4f, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10,
	0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x10, 0x05, 0x12, 0x08, 0x0a,
	0x04, 0x48, 0x4f, 0x55, 0x52, 0x10, 0x06, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x73, 0x2f, 0x73, 0x74, 0x65, 0x70, 0x32, 0x32, 0x34, 0x2d, 0x32, 0x30, 0x32, 0x30,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescOnce sync.Once
	file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescData = file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDesc
)

func file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescGZIP() []byte {
	file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescOnce.Do(func() {
		file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescData)
	})
	return file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDescData
}

var file_github_com_googleinterns_step224_2020_config_proto_probe_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_github_com_googleinterns_step224_2020_config_proto_probe_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_github_com_googleinterns_step224_2020_config_proto_probe_proto_goTypes = []interface{}{
	(HermesProbeDef_TargetSystem)(0), // 0: hermes.HermesProbeDef.TargetSystem
	(HermesProbeDef_ProbeType)(0),    // 1: hermes.HermesProbeDef.ProbeType
	(HermesProbeDef_LatencyUnit)(0),  // 2: hermes.HermesProbeDef.LatencyUnit
	(*HermesProbeDef)(nil),           // 3: hermes.HermesProbeDef
	(*Target)(nil),                   // 4: hermes.Target
	(*proto1.Dist)(nil),              // 5: cloudprober.metrics.Dist
	(*proto2.AdditionalLabel)(nil),   // 6: cloudprober.probes.AdditionalLabel
}
var file_github_com_googleinterns_step224_2020_config_proto_probe_proto_depIdxs = []int32{
	4, // 0: hermes.HermesProbeDef.targets:type_name -> hermes.Target
	0, // 1: hermes.HermesProbeDef.target_system:type_name -> hermes.HermesProbeDef.TargetSystem
	1, // 2: hermes.HermesProbeDef.probe_type:type_name -> hermes.HermesProbeDef.ProbeType
	5, // 3: hermes.HermesProbeDef.probe_latency_distribution:type_name -> cloudprober.metrics.Dist
	5, // 4: hermes.HermesProbeDef.api_call_latency_distribution:type_name -> cloudprober.metrics.Dist
	2, // 5: hermes.HermesProbeDef.latency_unit:type_name -> hermes.HermesProbeDef.LatencyUnit
	6, // 6: hermes.HermesProbeDef.probe_latency_additional_label:type_name -> cloudprober.probes.AdditionalLabel
	6, // 7: hermes.HermesProbeDef.api_call_latency_additional_label:type_name -> cloudprober.probes.AdditionalLabel
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_github_com_googleinterns_step224_2020_config_proto_probe_proto_init() }
func file_github_com_googleinterns_step224_2020_config_proto_probe_proto_init() {
	if File_github_com_googleinterns_step224_2020_config_proto_probe_proto != nil {
		return
	}
	file_github_com_googleinterns_step224_2020_config_proto_targets_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_googleinterns_step224_2020_config_proto_probe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HermesProbeDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_googleinterns_step224_2020_config_proto_probe_proto_goTypes,
		DependencyIndexes: file_github_com_googleinterns_step224_2020_config_proto_probe_proto_depIdxs,
		EnumInfos:         file_github_com_googleinterns_step224_2020_config_proto_probe_proto_enumTypes,
		MessageInfos:      file_github_com_googleinterns_step224_2020_config_proto_probe_proto_msgTypes,
	}.Build()
	File_github_com_googleinterns_step224_2020_config_proto_probe_proto = out.File
	file_github_com_googleinterns_step224_2020_config_proto_probe_proto_rawDesc = nil
	file_github_com_googleinterns_step224_2020_config_proto_probe_proto_goTypes = nil
	file_github_com_googleinterns_step224_2020_config_proto_probe_proto_depIdxs = nil
}
