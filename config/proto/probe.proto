// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//  Probe defines the probe interface for Hermes probes.
//  It is used in a variety of other files as it is the top-level probe interface.

syntax = "proto2";

package hermes;

import "github.com/google/cloudprober/probes/proto/config.proto";
import "github.com/google/cloudprober/metrics/proto/dist.proto";
import "github.com/googleinterns/step224-2020/config/proto/targets.proto";

option go_package = "github.com/googleinterns/step224-2020/config/proto";

// HermesProbeDef defines the proto config for the Hermes monitor probe.
message HermesProbeDef {
  optional string probe_name = 1;
  repeated Target targets = 2;

  // TargetSystem is expected to be a storage system.
  // It will stay constant until support for new storage systems is added.
  enum TargetSystem {
    TARGET_SYSTEM_UNSPECIFIED = 0;
    GCS = 1;
  }

  optional TargetSystem target_system = 3;

  // Probing interval in seconds, default = 3600
  optional int32 interval_sec = 4;  
  // Probes will not retry, they will fail if they timeout.
  optional int32 timeout_sec = 5;  // Timeout in seconds, default = 60

  // If specified, latency is stored as a distribution metric.
  // Measures the latency of Hermes' probes, allowing you to diagnose a network issue or issue with Hermes.
  // The measurement unit of latency will be seconds.
  optional cloudprober.metrics.Dist probe_latency_distribution = 6;  

  // Measures the latency of the API calls for the relevant storage system targeted.
  // The measurement unit of latency will be seconds.
  optional cloudprober.metrics.Dist api_call_latency_distribution = 7;  

  // Additional labels for the probe latency and API call latency distribution metrics.
  // Add as key-value pairs
  repeated cloudprober.probes.AdditionalLabel probe_latency_additional_label = 9;
  repeated cloudprober.probes.AdditionalLabel api_call_latency_additional_label = 10;

  // Must extend ProbeDef so this probe can be added to Cloudprober as an extension.
  extend cloudprober.probes.ProbeDef {
    optional HermesProbeDef hermes_probe_def = 200;
  }
}
