// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Evan Spendlove (@evanSpendlove)
//
// The Targets proto defines the config for a Target.
// Targets are used by Hermes and Cloudprober to identify storage systems to monitor.

syntax = "proto3";

package hermes;

option go_package = "github.com/googleinterns/step224-2020/config/proto";

// TargetDefinition contains all of the metadata necessary for Hermes to establish a connection to a storage system.
// Every probe request will require one or more targets.
message TargetDefinition {
  // TargetSystem is expected to be a storage system.
  // It will stay constant until support for new storage systems is added.
  enum TargetSystem {
    GOOGLE_CLOUD_STORAGE = 0;
    CEPH = 1;
  }
  // TODO(#30) Establish connection method for GCS and Ceph using Go libraries.
  enum ConnectionType {
     HTTP = 0;
     HTTPS = 1;
  }

  TargetSystem target_system = 1;
  ConnectionType connection_type = 2;
  ConnectionDetails connection_details = 3;
  string target_url = 5;  // URL for connecting to the the API of the target storage system.
  int64 total_space_allocated = 4;  // in MBs.
}

// REQUIRED, when using Ceph as the target system.
// Comparable functionality is handled in the Go client library for GCS.
message ConnectionDetails {
  // REQUIRED for Ceph S3 API
  // Port for connecting to Ceph S3 API
  int32 port = 1;

  // REQUIRED for Ceph S3 API
  // GCS uses service account credentials instead.
  string api_key = 2;
}

// Targets allows the user to define multiple targets.
message Targets {
  repeated TargetDefinition targets = 1;
}
