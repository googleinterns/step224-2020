// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: Evan Spendlove (@evanSpendlove)
//
// This proto defines the service-level config for Hermes.
// This is also the external service API for Hermes.

syntax = "proto3";

package hermes;

import "github.com/googleinterns/step224-2020/config/proto/probe.proto";
import "github.com/googleinterns/step224-2020/config/proto/targets.proto";

option go_package = "github.com/googleinterns/step224-2020/config/proto";

// This defines the (external) service-level config for Hermes.
// The Hermes service identifies the gRPCs Hermes supports.
service Hermes {

  // Start monitoring a new storage system.
  rpc StartMonitoringStorageSystem(HermesProbeRequest) returns (HermesProbeResponse) {}

  // Stop monitoring a storage system that is currently being monitored.
  rpc StopMonitoringStorageSystem(StopMonitoringSystemRequest) returns (StopMonitoringSystemResponse) {}

  // Lists the storage systems being monitored at the moment.
  rpc ListMonitoredStorageSystems(ListMonitoredSystemsRequest) returns (ListMonitoredSystemsResponse) {}
}
// HermesProbeRequest is used for starting monitoring a new storage system using a Hermes probe.
message HermesProbeRequest {
  HermesProbeDef probe_config = 1;
}
// TODO(#29) Add exit status to probe responses.
message HermesProbeResponse {}

// StopMonitoringSystemRequest specifies a target so that Hermes knows which target to stop monitoring.
message StopMonitoringSystemRequest {
  Targets targets = 1;
}
// TODO(#29) Add exit status for probe responses.
message StopMonitoringSystemResponse {}

message ListMonitoredSystemsRequest {}

// ListMonitoredSystemsResponse message holds the list of targets returned by ListMonitoredStorageSystems()
message ListMonitoredSystemsResponse {
  // TODO(#29) Add exit status to probe response.
  Targets targets = 1;
}
