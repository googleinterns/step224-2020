// Licensed under the Apache License, Version 2.0 (the "License")
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License. 
 
// Author: Alicja Kwiecinska (kwiecinskaa@google.com) github: alicjakwie 

// Hermes's interface with Cloudprober

syntax = "proto3";

package hermes;

import "github.com/googleinterns/step224-2020/config/proto/targets.proto";

option go_package = "github.com/googleinterns/step224-2020/config/proto";

// HermesProber provides methods (PutFile, GetFile, DeleteFile) to communicate instructions to Cloudprober regarding file operations 
service HermesProber {
  // Create and upload a file to the storage system
  rpc PutFile(PutFileRequest) returns ( PutFileResponse );
  
  // Retrieve a file from the storage system
  rpc GetFile(GetFileRequest) returns ( GetFileResponse );
  
  // Delete a file from the storage system
  rpc DeleteFile(DeleteFileRequest) returns ( DeleteFileResponse );
}

// TODO (#31): Complete ExitCode enum in interface.proto
enum ExitCode {

}

message HermesFile {
  string name = 1;  // REQUIRED field
  TargetsDef target = 2;  // REQUIRED field for PutFileRequest, GetFileRequest and DeleteFileRequest OPTIONAL field for GetFileResponse  
  string contents = 3;  // REQUIRED field for PutFileRequest OPTIONAL field for GetFileResponse
}

// HermesFile (name, contents and target) need to be specified so that Hermes knows what file to create, and which storage system to create it on
message PutFileRequest {
  HermesFile file = 1;
}

// returns the exit code after the rpc GetFile
message PutFileResponse {
  ExitCode exit_code = 1;  // REQUIRED field
}

// HermesFile (name and target, contents optional) need to be specified so that Hermes knows what file to retrieve and from which storage system to retrieve it from
message GetFileRequest {
  HermesFile file = 1; 
}

// returns the exit code after the rpc GetFile if GetFile suceeded we return the file (name and contents required) and if GetFile fails we do not
message GetFileResponse {
  ExitCode exit_code = 1;  // REQUIRED field
  HermesFile file = 2;  // OPTIONAL field
}

// HermesFile (name and target, contents optional) need to be specified so that Hermes knows what file to delete and from which storage system to delete it from 
message DeleteFileRequest {
  HermesFile file = 1;  // REQUIRED field
}

// returns the exit code after the rpc DeleteFile
message DeleteFileResponse {
  ExitCode exit_code = 1;  // REQUIRED field
}
